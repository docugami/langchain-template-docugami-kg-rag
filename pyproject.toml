[tool.poetry]
name = "docugami-kg-rag"
version = "0.6.0"
description = "This template contains a reference architecture for Retrieval Augmented Generation against a set of documents using Docugami's XML Knowledge Graph (KG-RAG)."
authors = [
    "Docugami <contact@docugami.com>",
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
langchain = ">=0.1.19"
langchain-community = ">=0.2.3"
docugami-langchain = "^0.0.16"
# docugami-langchain = {git = "https://github.com/docugami/docugami-langchain.git"}
# docugami-langchain = {git = "https://github.com/docugami/docugami-langchain.git", rev = "tjaffri/rel"}
typer = ">=0.9.0"
docugami = ">=0.1.2"
pyarrow = ">=16.0.0"
langsmith = ">=0.1.52"
openpyxl = ">=3.1.2"
faiss-cpu = ">=1.8.0"
torch = "2.2.0"
gptcache = "^0.1.43"
langchain-openai = { version = "*", optional = true }
langchain-fireworks = { version = "*", optional = true } 
chromadb = { version = ">=0.5.0", optional = true }
redis = { version = ">=5.0.4", optional = true }
redisvl = { version = ">=0.2.0", optional = true }
sentence-transformers = { version = "*", optional = true }

[tool.poetry.group.dev.dependencies]
codespell = "*"
langchain-cli = ">=0.0.22rc1"
ipykernel = "*"
black = "*"
pytest = "*"
pyyaml = "*"
ruff = "*"

[tool.poetry.extras]
openai = ["langchain-openai", "tiktoken"]
fireworks = ["langchain-fireworks"]
chromadb = ["chromadb"]
redis = ["redis", "redisvl"]
huggingface = ["langchain-huggingface", "sentence-transformers"]

[tool.black]
line-length = 127

[tool.ruff]
lint.select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]
line-length = 200
lint.ignore = ["E501", "E402", "F403"]

[tool.mypy]
disallow_untyped_defs = true
disable_error_code = ["typeddict-item"]
exclude = "/temp/"

[[tool.mypy.overrides]]
module = [
    "torch", "langchain_openai.*", "langchain_fireworks.*", "docugami_langchain.*", "gptcache.*", "llama_cpp.*"
]
ignore_missing_imports = true

[tool.langserve]
export_module = "docugami_kg_rag"
export_attr = "agent"

[tool.templates-hub]
use-case = "rag"
author = "Docugami"
integrations = ["OpenAI"]
tags = ["vectordbs"]

[tool.pytest.ini_options]
addopts = "--doctest-modules"
norecursedirs = ".venv temp"

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"
