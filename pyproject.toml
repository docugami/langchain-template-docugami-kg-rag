[tool.poetry]
name = "docugami-kg-rag"
version = "0.2.0"
description = "This template contains a reference architecture for Retrieval Augmented Generation against a set of documents using Docugami's XML Knowledge Graph (KG-RAG)."
authors = [
    "Docugami <contact@docugami.com>",
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
langchain = "^0.1.1"
langchain-community = "^0.0.13"
dgml-utils = "0.3.0"
typer = "^0.9.0"
docugami = "0.1.2"
pandas = "^2.2.0"
pyarrow = "^15.0.0"
langsmith = "^0.0.83"
openpyxl = "^3.1.2"
openai = { version = "^1.9.0", optional = true }
langchain-openai = { version = "^0.0.3", optional = true }
tiktoken = { version = "^0.5.2", optional = true }
chromadb = { version = "0.4.14", optional = true }
fireworks-ai = { version = "^0.11.2", optional = true }
redis = { version = "^5.0.1", optional = true }
redisvl = { version = "^0.0.7", optional = true }
torch = {  version = "^2.1.2", optional = true }
huggingface = { version = "^0.0.1", optional = true }
sentence-transformers = { version = "^2.2.2", optional = true }


[tool.poetry.group.dev.dependencies]
langchain-cli = "*"
ipykernel = "*"
black = "*"
pytest = "*"
pyyaml = "*"
ruff = "*"

[tool.poetry.extras]
openai = ["openai", "langchain-openai", "tiktoken"]
fireworks = ["fireworks-ai"]
chromadb = ["chromadb"]
redis = ["redis", "redisvl"]
huggingface = ["torch", "huggingface", "sentence-transformers"]

[tool.black]
line-length = 127

[tool.ruff]
ignore = ["E501", "E402"]

[tool.langserve]
export_module = "docugami_kg_rag"
export_attr = "chain"

[tool.templates-hub]
use-case = "rag"
author = "Docugami"
integrations = ["OpenAI"]
tags = ["vectordbs"]

[tool.pytest.ini_options]
addopts = "--doctest-modules"
norecursedirs = ".venv temp"

[tool.pyright]
ignore = ["**/node_modules", "**/__pycache__", ".venv"]
reportMissingImports = true
reportMissingTypeStubs = false

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"
